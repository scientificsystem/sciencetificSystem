{"version":3,"sources":["assets/image/photo.png","assets/image/loading.gif","utils/methods.js","utils/const.js","utils/state.js","actions/login.js","reducers/login.js","reducers/index.js","http/interceptors.js","lib/error.js","http/index.js","methods/login.js","epics/index.js","epics/login.js","store/persistor.js","view/home/home.js","components/user/Footer.js","components/user/Portrait.js","components/user/Lis.js","components/user/Note.js","components/user/Menus.js","components/user/Loading.js","components/Flex.js","components/Input.js","components/introduce/IntroduceItems.js","components/NoContent.js","components/introduce/PageFresh.js","components/introduce/PageList.js","components/introduce/PageListMore.js","components/introduce/DetailsItem.js","components/PopupWindow.js","components/Header.js","components/Tab.js","components/InputItem.js","components/login/LoginForm.js","components/BtnShowHide.js","view/login/login.js","view/login/register.js","view/user/user.js","view/user/has-no-user.js","routers/routes.js","routers/router.js","view/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getToken","localStorage","getItem","TOKEN","setToken","info","setItem","getLocalStroge","name","getBaseUrl","console","log","process","getTestState","state","arguments","length","undefined","data","_","has","staticState","createActions","_createActions","Object","defineProperty","loginReducer","handleActions","action","objectSpread","login","payload","enableBatching","combineReducers","routing","routerReducer","form","formReducer","axios","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","concat","err","Promise","reject","response","res","status","error","404","do","getError","http","Get","method","errorCatch","header","URL","baseHeader","format","getServiceState","getStaticState","code","msg","success","url","getLogin","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_args","wrap","_context","prev","next","sent","abrupt","stop","this","_x","apply","getRegister","_ref3","_callee3","_args3","_context3","_x3","epics","combineEpics","action$","pipe","ofType","mergeMap","map","token","moment","loginAction","mapTo","replace","_ref2","_callee2","_context2","_x2","store$","get","value","history","createBrowserHistory","middleware","routerMiddleware","epicMiddleware","createEpicMiddleware","persistedReducer","persistReducer","key","storage","reducers","store","createStore","applyMiddleware","persistor","persistStore","run","store_persistor","Home","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","match","routes","react_default","createElement","className","router_RouteWithSubRoutes","redirect","path","Component","Footer","_Component","inherits","createClass","href","Portrait","_this$props$style","style","_this$props$styleCont","styleContent","photo","background","children","Lis","icon","title","content","button","details","Loading","visible","_this$props$visibles","visibles","display","src","require","alt","instance","setState","NoContent","type","contents","Fragment","pageIndex","pageSize","Forms","handleSubmit","onSubmit","values","htmlFor","Field","component","placeholder","BtnShowHide_BtnShowHide","LoginForm","reduxForm","destroyOnUnmount","BtnShowHide","_this$props$btnstyle","btnstyle","backgroundColor","width","height","borderRadius","cursor","boxShadow","Login","connect","loginState","getFormValues","dispatch","ownProps","toLogin","toRegister","push","targetState","margin","onClick","Register","User","popState","_this2","Portrait_Portrait","setPopState","Lis_Lis","Link","to","Footer_Footer","modal_default","transparent","footer","text","onPress","alert","HasNoUser","alerts","RouteWithSubRoutes","Switch","route","i","Route","exact","render","isBefore","Date","add","assign","Redirect","pathname","BrowserRouter","HashRouter","configureStore","App","Loading_Loading","ref","locale_provider_default","locale","enUS","react_redux_es","integration_react","es","router_BrowserRouter","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7901ac4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo.6e5fead9.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.1833be6d.gif\";","import _ from \"lodash\";\nimport { TOKEN, staticState } from \"../utils\";\n\nexport const getToken = () => {\n    return localStorage.getItem(TOKEN) || '';\n}\n\nexport const setToken = info => {\n    localStorage.setItem(TOKEN, info);\n}\n\nexport const getLocalStroge = (name) => {\n    return localStorage.getItem(name) || '';\n}\n\nexport const setLocalStroge = (name, info) => {\n    localStorage.setItem(name, info);\n}\n\n\nexport const getBaseUrl = () => {\n    console.log(process.env.NODE_ENV)\n    return process.env.NODE_ENV === 'http://10.198.144.168:3000' ? '' : 'http://10.198.144.168:3000'\n}\n\nexport const getTestState = (name, state = true) => {\n    return {\n        state,\n        data: _.has(staticState, name) ? staticState.name : {}\n    }\n}\n\nexport const getResponseCodeCatch = (response) => {\n\n}\n\nexport const getURLParam = (name) => {\n    var reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`);\n    var r = window.location.search.substr(1).match(reg);\n    if (r != null) return decodeURI(r[2]); return null;\n}\n\nexport const getUrlLocalparam = (name) => {\n    var query = window.location.search.substring(1);\n    var vars = query.split('&');\n    for (var i = 0; i < vars.length; i++) {\n        var index = vars[i].indexOf('=');\n        if (vars[i].substring(0, index) === name) { return vars[i].substring(index + 1); }\n    }\n    return '';\n}","export const TOKEN = 'token'\nexport const TOKEN_EXP = 'tokenExp'\nexport const USER_INFO = 'userInfo'\nexport const USER_LOGIN_GET = 'userLoginGet'\nexport const USER_LOGIN = 'userLogin'\nexport const USER_LOGIN_RESET = 'userLoginReset'\nexport const USER_LOGIN_SET = 'userLoginSet'\nexport const USER_LOGIN_SUCCESS = 'userLoginSuccess'\nexport const USER_LOGIN_FAIL = 'userLoginFail'\n\nexport const USER_REGIStER_SUCCESS = 'userRegisterSuccess'\nexport const USER_REGIStER_FAIL = 'userRegisterFail'\nexport const USER_REGIStER_GET = 'userRegisterGet'\n\nexport const FETCH_SUCCESS = 'fetchSuccess'\nexport const FETCH_FAILE = 'fetchFAILE'\n","export const staticState = {\n\n}","import { createActions } from \"redux-actions\";\nimport {\n    USER_LOGIN,\n    USER_LOGIN_GET,\n    USER_LOGIN_RESET,\n    USER_LOGIN_SET,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_REGIStER_SUCCESS,\n    USER_REGIStER_GET,\n    USER_REGIStER_FAIL\n} from \"../utils\";\n\nexport default createActions({\n    [USER_LOGIN]: (state) => state,\n    [USER_LOGIN_RESET]: state => state,\n    [USER_LOGIN_GET]: state => state,\n    [USER_LOGIN_SET]: state => state,\n    [USER_LOGIN_FAIL]: state => state,\n    [USER_LOGIN_SUCCESS]: state => state,\n    [USER_REGIStER_SUCCESS]: state => state,\n    [USER_REGIStER_GET]: state => state,\n    [USER_REGIStER_FAIL]: state => state,\n})\n\n","import { handleActions } from 'redux-actions';\nimport { filterActions } from 'redux-ignore';\nimport toLogin from \"../actions/login\";\nimport { USER_LOGIN_SET } from \"../utils\";\n\nconst initialState = {\n    login: {\n        state: 0\n    }\n};\n\nconst loginReducer = handleActions({\n\n    [USER_LOGIN_SET]: (state, action) => {\n        console.log(state, action, '-------')\n        return {\n            ...state,\n            login: { state: action.payload }\n        };\n    },\n}, initialState);\n\nexport default loginReducer","import { enableBatching } from 'redux-batched-actions';\nimport { reducer as formReducer } from \"redux-form\";\nimport { routerReducer } from 'react-router-redux'\nimport { combineReducers } from 'redux'\nimport login from './login'\n\nexport default enableBatching(combineReducers({\n    login,\n    routing: routerReducer,\n    form: formReducer,\n\n}))\n","import axios from 'axios'\nimport { getToken, getBaseUrl } from \"../utils\";\nimport { getError } from '../lib'\n/**\n * 请求拦截\n */\naxios.create({\n    baseURL: getBaseUrl(),  // api的base_url\n    timeout: 30000  // 请求超时时间\n})\naxios.interceptors.request.use(\n    config => {\n        console.log(1)\n        if (getToken()) {\n            config.headers.Authorization = `token ${getToken()}`;\n        }\n        return config\n    },\n    err => {\n        Promise.reject(err)\n    }\n)\n\n/**\n * 响应拦截\n */\n\naxios.interceptors.response.use(\n    res => {\n        return res.data\n    },\n    err => {\n        console.log(2)\n        console.log(err)\n        if (err.response) {\n            const error = getError(err.response.status)\n            error.do()\n        }\n        return Promise.reject(err.response.data)   // 返回接口返回的错误信息\n    }\n)\n\n\nexport default axios","import { has } from \"lodash\";\nimport { setToken } from '../utils'\nexport const getError = status => {\n    const error = {\n        404: {\n            status: 404,\n            do: () => {\n                setToken('')\n                console.log('更换路由')\n            }\n        }\n    }\n    if (has(error, status)) {\n        return error[status]\n    }\n}","import axios from './interceptors';\nimport { getBaseUrl } from '../utils'\n\nclass Http {\n\n\n    Get = (method, data, status = { state: true }, errorCatch, header = {}) => {\n        const URL = `${getBaseUrl()}/methods${(!method ? '' : '/' + method)}`;\n        const baseHeader = {\n            format: 'json',\n            ...header\n        };\n        if (process.env.NODE_ENV === 'development' && !status.state) {\n            return http.getStaticState(status)\n        } else {\n\n            return http.getServiceState(URL, data, errorCatch, baseHeader, 'POST')\n        }\n\n    }\n    getStaticState = status => {\n        return {\n            \"code\": 0,\n            \"msg\": \"OK\",\n            \"data\": status.data,\n            \"success\": true\n        }\n    }\n\n    getServiceState = (url, data, errorCatch, headers, method = 'POST') => {\n        return axios({\n            url,\n            method: method,\n            headers,\n            data\n        })\n    }\n}\nconst http = new Http();\nexport default http;\n// export default (method, data, status = { state: true }, errorCatch,header = {}) => {\n//     // console.log('Request Data:', data);\n//     const URL = `${getBaseUrl()}/methods${(!method ? '' : '?' + method)}`;\n//     const baseHeader = {\n//         format: 'json',\n//         method,\n//         ...header\n//     };\n//     const headers = baseHeader;\n//     if (process.env.NODE_ENV === 'development' && !status.state) {\n//         return {\n//             \"code\": 0,\n//             \"msg\": \"OK\",\n//             \"data\": status.data,\n//             \"success\": true\n//         }\n//     }\n//     return axios({\n//         url: URL,\n//         method: 'POST',\n//         headers: headers,\n//         data\n//     })\n// };\n","import http from '../http';\n\nexport const getLogin = async (info, status = true) => {\n    console.log(status)\n    let response = await http.Get('user/login', {\n        ...info\n    }, status);\n    return response;\n}\n\nexport const getExit = async (info, status = true) => {\n    let response = await http.Get('user/exit', {\n        ...info\n    }, status);\n    return response;\n}\n\nexport const getRegister = async (info, status = true) => {\n    let response = await http.Get('user/register', {\n        ...info\n    }, status);\n    return response;\n}","import { combineEpics } from 'redux-observable';\nimport { getLoginStateEpic, setLoginStateEpic, getRegisterEpic, getRegisterSuccessEpic } from \"./login\";\n\nexport default combineEpics(\n    // loginEpic,\n    // exitEpic,\n    getLoginStateEpic,\n    setLoginStateEpic,\n    getRegisterEpic,\n    getRegisterSuccessEpic\n);","import \"rxjs\";\nimport { mergeMap, mapTo, map } from 'rxjs/operators';\nimport { ofType } from 'redux-observable';\nimport { replace } from 'react-router-redux'\nimport { get } from 'lodash'\nimport moment from 'moment'\n\nimport { USER_LOGIN_SUCCESS, USER_LOGIN_GET, USER_LOGIN_FAIL, USER_LOGIN_SET, USER_REGIStER_GET, TOKEN_EXP } from \"../utils\";\nimport { getTestState, setToken, setLocalStroge } from \"../utils\";\nimport loginAction from \"../actions/login\";\nimport { getLogin, getRegister } from '../methods'\n\nexport const getLoginStateEpic = (action$) =>\n    action$.pipe(\n        ofType(USER_LOGIN_GET),\n        mergeMap(\n            async action => await getLogin(action.payload, getTestState('login', false))\n        ),\n        map(res => {\n            if (res.success && res.code === 0) {\n                console.log(res.data.token)\n                setToken(res.data.token);\n                setLocalStroge(TOKEN_EXP, moment());\n                return loginAction[USER_LOGIN_SET](1)\n            } else {\n                return loginAction[USER_LOGIN_FAIL](0)\n            }\n\n        }))\n\nexport const setLoginStateEpic = (action$) =>\n    action$.pipe(\n        ofType(USER_LOGIN_SET),\n        mapTo(replace('/home/user')))\n\n\n\nexport const getRegisterEpic = (action$) =>\n    action$.pipe(\n        ofType(USER_REGIStER_GET),\n        mergeMap(\n            async action => await getRegister(action.payload, getTestState('register', true))\n        ),\n        map(res => {\n            if (res.success && res.code === 0) {\n                return loginAction[USER_LOGIN_SUCCESS](1)\n            } else {\n                return loginAction[USER_LOGIN_FAIL](0)\n            }\n\n        }))\n\nexport const getRegisterSuccessEpic = (action$, store$) =>\n    action$.pipe(\n        ofType(USER_LOGIN_SUCCESS),\n        mergeMap(\n            async action => {\n                return loginAction[USER_LOGIN_GET]({\n                    ...get(get(store$.value.form, 'login'), 'values')\n                })\n            }\n        )\n    )","import { applyMiddleware, createStore, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { createEpicMiddleware, } from \"redux-observable\";\nimport { routerMiddleware } from 'react-router-redux';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport reducers from '../reducers'\nimport epics from \"../epics\";\n\nconst history = createBrowserHistory()\n\nconst middleware = routerMiddleware(history)\nconst epicMiddleware = createEpicMiddleware();\nconst persistedReducer = persistReducer({ key: 'root', storage, }, reducers);\n\n// const store = createStore(persistedReducer, { login: {} }, applyMiddleware(epicMiddleware));\nlet store = process.env.NODE_ENV === 'production' ? (\n    createStore(persistedReducer, applyMiddleware(epicMiddleware, middleware))\n) : (\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? (\n            createStore(persistedReducer, compose(applyMiddleware(epicMiddleware, middleware), window.__REDUX_DEVTOOLS_EXTENSION__()))\n        ) : (\n                createStore(persistedReducer, applyMiddleware(epicMiddleware, middleware))\n            )\n    )\n\n\nconst persistor = persistStore(store, null, () => {\n    console.log('persist complate');\n});\nepicMiddleware.run(epics);\n\n// persistor.purge();\n\nexport default { store, persistor, history }","import React, { Component } from 'react';\r\nimport { RouteWithSubRoutes } from '../../routers';\r\nimport '../../assets/sass/animate.scss'\r\nimport '../../assets/sass/reset.scss'\r\nimport '../../assets/sass/style.scss'\r\nimport \"../../assets/sass/group.scss\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { match, routes, } = this.props;\r\n        return (\r\n            <div className='home'>\r\n                <RouteWithSubRoutes routes={routes} redirect={`${match.path}/user`} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport { Home }","import React, { Component } from 'react';\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <a className='Footer' href='http://www.ky-express.com/mobile/ky/?from=singlemessage'>\r\n\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Portrait extends Component {\r\n    render() {\r\n        let { name, style={}, styleContent={},photo }=this.props;\r\n        return (\r\n            <div className='Portrait' style={{...style}}>\r\n                <span className='photo' style={photo?{background:`url(${photo}) 100% 100%`}:{}}></span>\r\n                <section className='content'>\r\n                    <p style={{...styleContent}}>{name}</p>\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Lis extends Component {\r\n    render() {\r\n        let { icon, title, content, button, details } = this.props\r\n        return (\r\n            <div className='lis'>\r\n                <section>\r\n                    {\r\n                        icon?\r\n                            <span className={icon}></span>\r\n                        :\r\n                            null\r\n                    }\r\n                    \r\n                    <div className='text'>\r\n                        {\r\n                            title?\r\n                                <title className='title'>{title}</title>\r\n                            :\r\n                                null\r\n                        }\r\n                        {\r\n                            content?\r\n                                <p className='content'>\r\n                                    { content }\r\n                                    {\r\n                                        details?\r\n                                            details()\r\n                                        :\r\n                                            null\r\n                                    }\r\n                                    \r\n                                </p>\r\n                            :\r\n                                null\r\n                        }\r\n                    </div>\r\n                    {\r\n                        button?\r\n                            this.props.children\r\n                        :\r\n                            null\r\n                    }\r\n                </section>    \r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class Note extends Component {\r\n    render() {\r\n        let {title, content, icon, style,contents='content' }=this.props\r\n        return (\r\n            <div className='Note' style={{...style}}>\r\n                <span className={icon}></span>\r\n                <section className={contents}>\r\n                    <p>{title}</p>\r\n                    <p>{content}</p>\r\n                </section>\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class Menus extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Footer'>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\n\nexport class Loading extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false\n        };\n    }\n\n    static toggle(visible = false) {\n        this.instance && this.instance.setState({\n            visible\n        });\n    }\n\n    render() {\n        const { visibles=false } = this.props;\n        const { visible } = this.state;\n        return (\n            <div\n                className='loading'\n                style={{ display: visible || visibles ? 'flex' : 'none' }}>\n                <div>\n                    <img src={require('../../assets/image/loading.gif')} alt=\"\"/>\n                    <span>正在加载数据…</span>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\r\n\r\nexport class Flex extends Component {\r\n    render() {\r\n        let {style={}} = this.props;\r\n        return (\r\n            <div style={{display:'flex',...style}}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { get, has, size } from 'lodash'\r\nimport { Toast } from 'antd-mobile';\r\n\r\nexport class Input extends Component {\r\n  \r\n\r\n    change=(e)=>{\r\n        let { name, regular, max=200 }=this.props;\r\n        if(get(this.props,'onChange')){\r\n            this.props.onChange();\r\n        }else{\r\n            let value={}\r\n                value[name]={values:e.target.value};\r\n                if(size(e.target.value)>max){\r\n                    return;\r\n                }\r\n\r\n                value[name].regular={state:true,message:get(get(this.props,'regular'),'message')||''}\r\n                if(has(this.props,'regular')){\r\n                    if(!regular.rules.test(e.target.value)){\r\n                        value[name].regular={state:false,message:regular.message}\r\n                    }\r\n                }\r\n                if(has(this.props,'regular')){\r\n                    if(regular.rules.test(e.target.value)){\r\n                        this.props.getInputValue(value);   \r\n                    }else{\r\n                        if(size(e.target.value)===0){\r\n                            this.props.getInputValue(value);   \r\n                        }\r\n                    }\r\n                }else{\r\n                    this.props.getInputValue(value);\r\n                }\r\n\r\n                  \r\n        }\r\n    }\r\n\r\n    onblurs=()=>{\r\n\r\n        let { onblur=false, parameter={}, values, regular } = this.props;\r\n\r\n        if(typeof onblur === 'function'){\r\n            onblur({\r\n                ...parameter\r\n            })\r\n        }else{\r\n            if(onblur){\r\n                if(has(this.props,'regular')){\r\n                    if(has(regular,'onblurRules')){\r\n                        if(!regular.onblurRules.test(values)){\r\n                            Toast.info(`${regular.message}`, 2, null, false);\r\n                        }\r\n                    }else{\r\n                        if(!regular.rules.test(values)){\r\n                            Toast.info(`${regular.message}`, 2, null, false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let { name, values, placeholder, style={} } = this.props;\r\n        return (\r\n            <input \r\n                placeholder={placeholder} \r\n                value={values} \r\n                onChange={this.change}\r\n                style={{...style}}\r\n                ref={name}\r\n                onBlur={this.onblurs}\r\n            />\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { size } from 'lodash';\r\n\r\nexport class IntroduceItems extends Component {\r\n    render() {\r\n        let { company, oState, url, data }=this.props\r\n        let icon = `icon icon-${oState.state}`;\r\n        return (\r\n            <Link to={{pathname:url, state:data}}  className='IntroduceItems'>\r\n                <div>\r\n                    <p>{company.substring(0,2)}****{company.substring(size(company)-2)}</p>\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </div>      \r\n                <span className={icon}></span>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react'\nexport class NoContent extends Component {\n    render() {\n        const { type, title, contents } = this.props\n        return (\n            <div className={`no-content-box ${type}`}>\n                <div className=\"content\">\n                    <div className=\"img\"></div>\n                    {\n                        type === 'account' ? \n                        (\n                            <>\n                                <p>暂无记录</p>\n                                <p>……</p>\n                            </>\n                        ) :\n                        (\n                            <>\n                                <p>{ title }</p>\n                                <p>{ contents }</p>\n                            </>\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\r\nimport { PullToRefresh } from 'antd-mobile';\r\nimport { size } from 'lodash';\r\nimport { Toast } from 'antd-mobile';\r\nimport { NoContent } from '../NoContent';\r\n\r\nlet   pageIndex = 1;\r\nconst pageSize=20;\r\n\r\nclass PageFresh extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            isLoading: true,\r\n        };\r\n    }\r\n    \r\n    render() {\r\n        let {  Components, parameter, pageName, getFreshData, onFresh, boxStyle={}, dataSouce, noContent='',contents, title } =this.props;\r\n        let freshState=size(dataSouce)%pageSize===0?true:false;\r\n        console.log(dataSouce)\r\n        return(\r\n                size(dataSouce)>0?\r\n                    <PullToRefresh\r\n                        damping={60}\r\n                        ref={el => this.ptr = el}\r\n                        style={{\r\n                        height: this.state.height,\r\n                        overflow: 'auto',\r\n                        }}\r\n                        direction='up'\r\n                        indicator={{ activate: <span style={{fontSize:'1.4rem'}}>加载更多</span>, finish: <span style={{fontSize:'1.4rem'}}>加载完成</span> }}\r\n                        onRefresh={async () => {\r\n                            this.setState({ refreshing: true });\r\n                            if(freshState){\r\n                                pageIndex++\r\n                                let pages={};\r\n                                    pages[pageName.pageIndex]=pageIndex.toString();\r\n                                    pages[pageName.pageSize]=pageSize.toString();\r\n                                let res = await onFresh({\r\n                                    ...parameter,\r\n                                    ...pages\r\n                                })\r\n                                if(res.success && res.code===0){\r\n                                    getFreshData(res.data);\r\n                                }else{\r\n                                    Toast.info(`${res.msg}`, 2, null, false);\r\n                                }\r\n                            }\r\n                        }}\r\n                        distanceToRefresh = {window.devicePixelRatio * 25}\r\n\r\n                    >\r\n                        {dataSouce.map((o,i) => (\r\n                            <div key={i} style={{...boxStyle}} className='page-fresh-box'>\r\n                                {\r\n                                    Components(o,i)\r\n                                }\r\n                            </div>\r\n                            \r\n                        ))}\r\n                    </PullToRefresh>\r\n                :\r\n                <NoContent \r\n                    type={noContent} \r\n                    contents={ contents }\r\n                    title={ title }\r\n                />\r\n        );\r\n    }\r\n}\r\nexport {PageFresh}\r\n\r\n","import React, { Component } from 'react';\r\nimport { ListView, Toast } from 'antd-mobile';\r\nimport { size } from 'lodash';\r\nimport { NoContent } from '../NoContent';\r\n\r\nlet   pageIndex = 1;\r\nconst pageSize=20;\r\n\r\nclass PageList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const data = new ListView.DataSource({\r\n          rowHasChanged: (row1, row2) => row1 !== row2,\r\n        });\r\n    \r\n        this.state = {\r\n            data,\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        // you can scroll to the specified position\r\n        // setTimeout(() => this.lv.scrollTo(0, 120), 800);\r\n    \r\n        // simulate initial Ajax\r\n        this.rData = this.genData();\r\n        this.setState({\r\n            data: this.state.data.cloneWithRows(this.rData),\r\n            isLoading: false,\r\n        });\r\n\r\n    }\r\n\r\n    genData=()=>{\r\n        let { dataSouce } = this.props;\r\n        const dataBlob = {};\r\n        for (let i = 0; i < size(dataSouce); i++) {\r\n            dataBlob[`${i}`] = `row - ${i}`;\r\n        }\r\n        return dataBlob;\r\n    }\r\n\r\n    onEndReached = async (event) => {\r\n        // load new data\r\n        // hasMore: from backend data, indicates whether it is the last page, here is false\r\n        console.log(1)\r\n        if (this.state.isLoading && !this.state.hasMore) {\r\n          return;\r\n        }\r\n\r\n        let { parameter, pageName, getFreshData, onFresh, dataSouce } =this.props;\r\n        let freshState=size(dataSouce)%12===0?true:false;\r\n        this.setState({ isLoading: true });\r\n\r\n        if(freshState){\r\n            \r\n            pageIndex++;\r\n            console.log(pageIndex)\r\n            let pages={};\r\n                pages[pageName.pageIndex]=pageIndex.toString();\r\n                pages[pageName.pageSize]=pageSize.toString();\r\n            let res = await onFresh({\r\n                ...parameter,\r\n                ...pages\r\n            })\r\n            if(res.success && res.code===0){\r\n\r\n                getFreshData(res.data);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n\r\n            }else{\r\n                Toast.info(`${res.msg}`, 2, null, false);\r\n            }\r\n        }\r\n\r\n\r\n      }\r\n\r\n    render() {\r\n        let {  Components, boxStyle={}, dataSouce, noContent='',contents, title } =this.props;\r\n\r\n        let index = size(dataSouce) - 1;\r\n        const row = (rowID) => {\r\n\r\n            if (index < 0) {\r\n                index = size(dataSouce) - 1;\r\n            }\r\n            const o = dataSouce[index--];\r\n            return (\r\n                    <div key={rowID} style={{...boxStyle}} className='page-fresh-box'>\r\n                        {\r\n                            Components(o,rowID)\r\n                        }\r\n                    </div>\r\n            );\r\n        };\r\n        return(\r\n                size(dataSouce)>0?\r\n                    <ListView\r\n                        ref={el => this.lv = el}\r\n                        dataSource={this.state.data}\r\n                        renderRow={row}\r\n                        className=\"am-list\"\r\n                        pageSize={4}\r\n                        useBodyScroll\r\n                        onScroll={() => { console.log('scroll'); }}\r\n                        scrollRenderAheadDistance={500}\r\n                        onEndReached={this.onEndReached}\r\n                        onEndReachedThreshold={10}\r\n                    />\r\n                    :\r\n                    <NoContent \r\n                        type={noContent} \r\n                        contents={ contents }\r\n                        title={ title }\r\n                    />\r\n        );\r\n    }\r\n}\r\nexport {PageList}\r\n\r\n","import React, { Component } from 'react';\r\nimport {  Toast } from 'antd-mobile';\r\nimport { size } from 'lodash';\r\nimport { NoContent } from '../'\r\n\r\nlet   pageIndex = 1;\r\nconst pageSize=20;\r\n\r\nclass PageListMore extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n          isLoadingMore: false\r\n        });\r\n    }\r\n    \r\n    componentWillMount(){\r\n        let { dataSouce } = this.props;\r\n        pageIndex= Math.ceil(size(dataSouce)/pageSize);\r\n    }\r\n\r\n    render() {\r\n      let { scrollClass='', dataSouce, Components, boxStyle, noContent, contents, title }=this.props;\r\n        return (\r\n            size(dataSouce)>0?\r\n                <div className={`scroll ${scrollClass}`}>\r\n                    <div className=\"scroll-list\" ref=\"scroll\" onTouchMove={this.getTarget} >\r\n                        {\r\n                            dataSouce.map((o,i)=>{\r\n                                return  <div key={i} style={{...boxStyle}} className='refresh-list'>\r\n                                            {\r\n                                                Components(o,i)\r\n                                            }\r\n                                        </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {\r\n                        this.state.isLoadingMore?\r\n                            <div className=\"scroll-loading\" ref=\"wrapper\">\r\n                                  <span></span>\r\n                                  <span></span>\r\n                                  <span></span>\r\n                                  <span></span>\r\n                                  <span></span>\r\n                            </div>\r\n                        :\r\n                            <div className=\"scroll-loading\" ref=\"wrapper\" style={{height:0}}>\r\n                            </div>\r\n                    }\r\n                    \r\n                </div>\r\n            :    \r\n                <NoContent \r\n                    type={noContent} \r\n                    contents={ contents }\r\n                    title={ title }\r\n                /> \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n\r\n    }\r\n    getTarget=async e=>{\r\n        let { isLoadingMore } = this.state;\r\n        let { refresh, dataSouce, parameter, pageName, getFreshData } = this.props;\r\n        const top = this.refs.wrapper.getBoundingClientRect().top;\r\n        const windowHeight = window.screen.height;\r\n\r\n        if (top/2 && top/2 < windowHeight && !isLoadingMore && size(dataSouce)%pageSize===0 && size(dataSouce)>=pageSize*pageIndex) {\r\n            // 当 wrapper 已经被滚动到页面可视范围之内触发\r\n            \r\n            if(refresh){\r\n                this.setState({\r\n                    isLoadingMore:true\r\n                })\r\n                pageIndex++;\r\n                let pages={};\r\n                    pages[pageName.pageIndex]=pageIndex.toString();\r\n                    pages[pageName.pageSize]=pageSize.toString();\r\n                let res =await refresh({\r\n                    ...pages,\r\n                    ...parameter\r\n                })\r\n                console.log(res)\r\n                if( res.code===0 && res.success ){\r\n                    if(getFreshData){\r\n                        getFreshData(res.data);\r\n                    }  \r\n                }else{\r\n                    Toast.info(`${res.msg}`, 2, null, false);\r\n                }\r\n                this.setState({\r\n                    isLoadingMore:false\r\n                },()=>{\r\n                  console.log(isLoadingMore)\r\n                })\r\n            }\r\n        }    \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {PageListMore};","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nclass DetailsItem extends Component {\r\n\r\n    click = () => {\r\n        let { data, itemClick } = this.props;\r\n        itemClick(data);\r\n    }\r\n\r\n    render() {\r\n        let { data } = this.props;\r\n        let oState;\r\n        if (data.statusCode === 1) {\r\n            oState = { state: 1, content: '终止开发' }\r\n        } else if (data.statusCode === 3 || data.statusCode === 0) {\r\n            oState = { state: 3, content: '开发成功' }\r\n        } else if (data.statusCode === 2) {\r\n            oState = { state: 2, content: '开发中' }\r\n        } else {\r\n            oState = { state: 2, content: '开发中' }\r\n        }\r\n        let icon = `icon icon-${oState.state}`;\r\n\r\n        return (\r\n            <span className='IntroduceItems' onClick={this.click}>\r\n                <div>\r\n                    <p>{data.introductionToCompany}</p>\r\n                    {\r\n                        oState.state === 3 || oState.state === 0 ?\r\n                            <section className='content'>\r\n                                <p>累  计  收  益：{data.cashAmount}元</p>\r\n                                <p>剩余收益时长：{data.surplusDay}天</p>\r\n                            </section>\r\n                            :\r\n                            <section className='content'>\r\n                                <p>开发人员：{data.scry} {data.scTel}</p>\r\n                                <p>介绍日期：{moment(data.contactTime).format('YYYY-MM-DD')}</p>\r\n                            </section>\r\n                    }\r\n                </div>\r\n                <span className={icon}></span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\nexport { DetailsItem }","import React, { Component } from 'react';\r\n\r\nexport class PopupWindow extends Component {\r\n    render() {\r\n        let {style} =this.props;\r\n        return (\r\n            <div className='popup-window' style={{...style}}>\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        let { title, close=false, style={}}=this.props;\r\n        return (\r\n            <div className='Header' style={{...style}}>\r\n                <p>{title}</p>\r\n                {\r\n                    close?<span></span>:null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { size } from 'lodash'\r\n\r\nexport class Tab extends Component {\r\n\r\n    itemsClick=()=>{\r\n\r\n    }\r\n\r\n    render() {\r\n        let { classname='', tabs=[], pages=0} = this.props;\r\n\r\n        return (\r\n            size(tabs)>0?\r\n                <div className={`diy-tab ${classname}`}>\r\n                    <header>\r\n                        <article>\r\n                            {\r\n                                tabs.map((o,i)=>{\r\n                                    return  <div key={i} className={`${pages===i?'item-selected':''} item`} onClick={this.itemsClick}>{o.title}</div>\r\n                                })\r\n                            }\r\n                        </article>    \r\n                    </header>\r\n                    <section className='container'>\r\n                        {\r\n                            React.Children.map(this.props.children, function (child) {\r\n                                return child;\r\n                            })\r\n                        }\r\n                    </section>\r\n                </div>\r\n            :\r\n                null\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { get, has, replace, size } from 'lodash'\r\nimport { Toast } from 'antd-mobile';\r\n\r\nexport class InputItem extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            value:get(this.props,'initValue')||'',\r\n            state:true\r\n        }\r\n    }\r\n\r\n    componentWillMount () {\r\n        this.setState({\r\n            value:get(this.props,'initValue')||''\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps (props){\r\n        if(size(get(props,'initValue'))>0&&get(props,'initValue')!==get(this.props,'initValue')){\r\n            this.setState({\r\n                value:get(props,'initValue')||'',\r\n                state:true\r\n            })\r\n        }\r\n    }\r\n\r\n    onblurs=()=>{\r\n\r\n        let { onblur=true, parameter={}, regular } = this.props;\r\n\r\n        if(typeof onblur === 'function'){\r\n            onblur({\r\n                ...parameter\r\n            })\r\n        }else{\r\n            if(!onblur){\r\n                Toast.info(`${regular.message}`, 2, null, false);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    onchange=e=>{\r\n        let value=has(this.props,'max')?e.target.value.substring(0,this.props.max):e.target.value;\r\n        console.log(1111)\r\n        if(has(this.props,'itemType')&& has(this,get(this.props,'itemType'))){\r\n            let type=this.props.itemType;\r\n            this[type](value)\r\n        }else{\r\n            this.checkRegular(value)\r\n        }\r\n    }\r\n\r\n    checkRegular= value =>{\r\n        let state=true;\r\n        let { name } = this.props;\r\n\r\n        if(has(this.props,'regular') && has(get(this.props,'regular'),'rules')){\r\n            console.log(this.props.regular.rules,this.props.regular.rules.test(value))\r\n            state=this.props.regular.rules.test(value)\r\n        }\r\n\r\n        this.setValue(value,state,()=>{\r\n            if(has(this.props,'callback')){\r\n                let o ={};\r\n                    o[name]={\r\n                        values:value,\r\n                        initValue:get(this.props,'initValue')||'',\r\n                        state\r\n                    }\r\n                this.props.callback({\r\n                    ...o\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    phone= value =>{\r\n        let { name } = this.props;\r\n        console.log(value.replace(/\\s/g,''))\r\n        let state = /^1\\d{10}$/.test(value);\r\n        console.log(replace(value,/[^0-9]/g,''))\r\n        this.setValue(replace(value,/[^0-9]/g,''),state,()=>{\r\n            if(has(this.props,'callback')){\r\n                let o ={};\r\n                    o[name]={\r\n                        values:value,\r\n                        initValue:get(this.props,'initValue')||'',\r\n                        state\r\n                    }\r\n                this.props.callback({\r\n                    ...o\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    numbers= value =>{\r\n        let { name } = this.props;\r\n\r\n        let state = /^[0-9]{1,}$/.test(value);\r\n        this.setValue(replace(value,/[^0-9]/g,''),state,()=>{\r\n            if(has(this.props,'callback')){\r\n                let o ={};\r\n                    o[name]={\r\n                        values:value,\r\n                        initValue:get(this.props,'initValue')||'',\r\n                        state\r\n                    }\r\n                this.props.callback({\r\n                    ...o\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    bank= value =>{\r\n        let { name } = this.props;\r\n\r\n        let state = /^[0-9]{1,}$/.test(value.replace(/\\s/g,''));\r\n        let valueStart=replace(value,/[^0-9]/g,'');\r\n        let valueEnd=valueStart.replace(/\\s/g,'').replace(/[^\\d]/g,'').replace(/(\\d{4})(?=\\d)/g,'$1 ')\r\n        console.log(valueStart,state)\r\n        this.setValue(valueEnd,state,()=>{\r\n            if(has(this.props,'callback')){\r\n                let o ={};\r\n                    o[name]={\r\n                        values:valueStart,\r\n                        initValue:get(this.props,'initValue')||'',\r\n                        state\r\n                    }\r\n                this.props.callback({\r\n                    ...o\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    setValue= (value,state,callback,parameter={}) =>{\r\n        this.setState({\r\n            value,\r\n            state\r\n        },()=>{\r\n            if(typeof(callback)==='function'){\r\n                callback({\r\n                    ...parameter\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { name, placeholder, style={}, max=100, } = this.props;\r\n\r\n        return (\r\n            <input \r\n                placeholder={placeholder} \r\n                value={this.state.value} \r\n                onChange={this.onchange}\r\n                style={{...style}}\r\n                ref={name}\r\n                onBlur={this.onblurs}\r\n                maxLength={max}\r\n\r\n            />\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { BtnShowHide } from \"..\";\n\nclass Forms extends Component {\n    render() {\n        let { handleSubmit } = this.props;\n        return (\n            <form onSubmit={handleSubmit(values => { console.log(values) })}>\n                <div className='widthBase center userName'>\n                    <label htmlFor=\"userName\" className='login-label'>用户名</label>\n                    <Field name=\"userName\" component=\"input\" placeholder='请输入用户名' type=\"text\" />\n                </div>\n                <div className='felx widthBase center password'>\n                    <label htmlFor=\"password\" className='login-label'>密码</label>\n                    <Field name=\"password\" component=\"input\" type=\"text\" placeholder='请输入密码' />\n                    <BtnShowHide />\n                </div>\n                {\n                    this.props.children || null\n                }\n            </form>\n        )\n    }\n}\n\n\nconst LoginForm = reduxForm({\n    // a unique name for the form\n    form: 'login',\n    destroyOnUnmount: false, // \n})(Forms)\n\nexport { LoginForm };","import React, { Component } from 'react';\n\nexport class BtnShowHide extends Component {\n    render() {\n        let { style = {}, btnstyle = {} } = this.props;\n        return (\n            <div style={\n                {\n                    backgroundColor: '#6e00d2',\n                    width: '40px',\n                    height: '20px',\n                    borderRadius: '10px',\n                    cursor: 'pointer',\n                    boxShadow: '0px 0px 5px  #eee',\n                    ...style\n                }\n            }>\n                <span style={\n                    {\n                        backgroundColor: '#fff',\n                        width: '20px',\n                        height: '20px',\n                        borderRadius: '10px',\n                        display: 'block',\n                        boxShadow: '0px 0px 5px  #fff',\n                        ...btnstyle\n                    }\n                }></span>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\r\nimport { Loading, LoginForm } from '../../components'\r\nimport { connect } from \"react-redux\"\r\nimport loginAction from '../../actions/login'\r\nimport { USER_LOGIN_GET } from \"../../utils\";\r\nimport { push } from 'react-router-redux';\r\nimport { getFormValues } from 'redux-form';\r\n\r\nconst photo = require('../../assets/image/photo.png')\r\n\r\n@connect(\r\n    (state) => (\r\n        {\r\n            loginState: state.login,\r\n            form: getFormValues('login')(state)\r\n        }\r\n    )\r\n    , (dispatch, ownProps) => (\r\n        {\r\n            toLogin: state => (dispatch(loginAction[USER_LOGIN_GET](state))),\r\n            toRegister: () => (dispatch(push('/register'))),\r\n        }\r\n    ))\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            targetState: true,\r\n            loginState: 3\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        // this.props.history.replace('/home/user')\r\n    }\r\n\r\n    render() {\r\n        const { toLogin, form, toRegister } = this.props\r\n        console.log(this.props)\r\n        return (\r\n            <div className='login login-login'>\r\n                <header >\r\n                    <img src={photo} />\r\n                </header>\r\n                <LoginForm>\r\n                    <span className='btn-submits' style={{\r\n                        margin: '40px auto'\r\n                    }}\r\n                        onClick={\r\n                            () => {\r\n                                toLogin({\r\n                                    ...form\r\n                                })\r\n                            }\r\n                        }\r\n                    >登录</span>\r\n                </LoginForm>\r\n                <section className='footer'>\r\n                    <p className='forget'>忘记秘密</p>\r\n                    <i ></i>\r\n                    <p className='registered' onClick={() => toRegister()}>注册</p>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport { Login }","import React, { Component } from 'react'\nimport { Loading, LoginForm } from '../../components'\nimport { connect } from \"react-redux\"\nimport loginAction from '../../actions/login'\nimport { USER_REGIStER_GET } from \"../../utils\";\nimport { getFormValues } from 'redux-form';\nconst photo = require('../../assets/image/photo.png')\n\n\n@connect(\n    (state) => (\n        {\n            loginState: state.login,\n            form: getFormValues('login')(state)\n        }\n    )\n    , (dispatch, ownProps) => (\n        {\n            toRegister: state => (dispatch(loginAction[USER_REGIStER_GET](state)))\n        }\n    ))\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            targetState: true,\n            loginState: 3\n        }\n    }\n\n\n    render() {\n        const { toRegister, form } = this.props\n        console.log(this.props)\n        return (\n            <div className='login login-login'>\n                <header >\n                    <img src={photo} />\n                </header>\n                <LoginForm>\n                    <span className='btn-submits' style={{\n                        margin: '40px auto'\n                    }}\n                        onClick={\n                            () => {\n                                toRegister({\n                                    ...form\n                                })\n                            }\n                        }\n                    >注册</span>\n                </LoginForm>\n                <section className='footer'>\n                    <p className='forget'>忘记秘密</p>\n                    <i ></i>\n                    <p className='registered'>登录</p>\n                </section>\n            </div>\n        );\n    }\n}\nexport { Register }","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\nimport { Footer, Portrait, Lis } from '../../components/user';\r\nimport { Modal } from 'antd-mobile';\r\nimport { getFormValues } from 'redux-form';\r\nimport { forEach } from 'lodash';\r\n@connect(\r\n    (state) => (\r\n        {\r\n            loginState: state.login,\r\n            form: getFormValues('login')(state)\r\n        }\r\n    )\r\n    , (dispatch, ownProps) => (\r\n        {\r\n\r\n        }\r\n    ))\r\nclass User extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            popState: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.form)\r\n        return (\r\n            <div className='user-cneter'>\r\n                <header >\r\n                    <div className='portrait'>\r\n                        <Portrait\r\n                            name='hi～你好！'\r\n                        >\r\n                            <div className='phone-bank'>\r\n                                <span onClick={this.setPopState}>绑定手机号</span>\r\n                                <span onClick={this.setPopState}>绑定银行卡</span>\r\n                            </div>\r\n                        </Portrait>\r\n                    </div>\r\n                    <div className='menus'>\r\n                        <ul onClick={this.setPopState}>\r\n                            <span className='lis'>\r\n                                <p>0</p>\r\n                                <p>我的介绍</p>\r\n                            </span>\r\n                            <span className='lis'>\r\n                                <p>0</p>\r\n                                <p>我的团队</p>\r\n                            </span>\r\n                            <span className='lis'>\r\n                                <p>0</p>\r\n                                <p>可提现(元)</p>\r\n                            </span>\r\n                            <span className='lis'>\r\n                                <p>0</p>\r\n                                <p>累计收入(元)</p>\r\n                            </span>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </header>\r\n\r\n                <section className='container'>\r\n                    <div className='uls'>\r\n                        <Lis\r\n                            icon='introduce'\r\n                            title='介绍客户赚佣金'\r\n                            content='成功介绍客户可获得12个月总运费5%的佣金奖励'\r\n                            details={() => <Link to='/home/activity/introduce/0' >[查看详情]</Link>}\r\n                            button={true}\r\n                        >\r\n                            <button onClick={this.setPopState} className='btn'>立即介绍</button>\r\n                        </Lis>\r\n                        <Lis\r\n                            icon='team'\r\n                            title='组团介绍赚团费'\r\n                            content='团员介绍客户成功，团长可获团员客户总运费1%的奖励！'\r\n                            details={() => <Link to='/home/activity/introduce/1'>[查看详情]</Link>}\r\n                            button={true}\r\n                        >\r\n                            <button className='btn' onClick={this.setPopState}>邀请好友</button>\r\n                        </Lis>\r\n                    </div>\r\n                </section>\r\n                <footer className='pd-30-0-30-0'>\r\n                    <Footer />\r\n                </footer>\r\n                <Modal\r\n                    visible={this.state.popState}\r\n                    transparent\r\n                    title='登录提醒'\r\n                    className='user-tips-popup'\r\n                    footer={[{\r\n                        text: '确定', onPress: () => {\r\n                            this.setPopState()\r\n                        }\r\n                    }]}\r\n                >\r\n                    <section className='incarnate-success'>\r\n                        <p>\r\n                            该账号尚未登录，请关注跨越速运公众号登录绑定\r\n                        </p>\r\n                    </section>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport { User }","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Footer, Portrait, Lis, } from '../../components/user';\r\nimport { Modal } from 'antd-mobile'\r\nconst alert = Modal.alert;\r\n\r\nclass HasNoUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            popState:true\r\n        }\r\n    }\r\n\r\n    alerts=()=>{\r\n        alert('该账号尚未登录公众号，请登录绑定', [\r\n            {\r\n                text: '看看再说', onPress: () => {}\r\n            },\r\n            {\r\n                text: '确定加入', onPress: () => {\r\n                }\r\n            },\r\n        ]);\r\n    }\r\n\r\n    setPopState=()=>{\r\n        this.setState({\r\n            popState:!this.state.popState\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className='user-cneter'>\r\n                <header >\r\n                    <div className='portrait'>\r\n                        <Portrait\r\n                            name='hi～你好！'\r\n                        >\r\n                            <div className='phone-bank'>\r\n                                <span onClick={this.setPopState}>绑定手机号</span>\r\n                                <span onClick={this.setPopState}>绑定银行卡</span>\r\n                            </div>\r\n                        </Portrait>\r\n                    </div>\r\n                    <div className='menus'>\r\n                        <ul onClick={this.setPopState}>\r\n                            <span className='lis'>\r\n                                <p>0</p>\r\n                                <p>我的介绍</p>\r\n                            </span>\r\n                            <span  className='lis'>\r\n                                <p>0</p>\r\n                                <p>我的团队</p>\r\n                            </span>\r\n                            <span  className='lis'>\r\n                                <p>0</p>\r\n                                <p>可提现(元)</p>\r\n                            </span>\r\n                            <span  className='lis'>\r\n                                <p>0</p>\r\n                                <p>累计收入(元)</p>\r\n                            </span>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </header>\r\n\r\n                <section className='container'>\r\n                    <div className='uls'>\r\n                        <Lis\r\n                            icon='introduce'\r\n                            title='介绍客户赚佣金'\r\n                            content='成功介绍客户可获得12个月总运费5%的佣金奖励'\r\n                            details={() => <Link to='/home/activity/introduce/0' >[查看详情]</Link>}\r\n                            button={true}\r\n                        >\r\n                            <button onClick={this.setPopState} className='btn'>立即介绍</button>\r\n                        </Lis>\r\n                        <Lis\r\n                            icon='team'\r\n                            title='组团介绍赚团费'\r\n                            content='团员介绍客户成功，团长可获团员客户总运费1%的奖励！'\r\n                            details={() => <Link to='/home/activity/introduce/1'>[查看详情]</Link>}\r\n                            button={true}\r\n                        >\r\n                            <button className='btn' onClick={this.setPopState}>邀请好友</button>\r\n                        </Lis>\r\n                    </div>\r\n                </section>\r\n                <footer className='pd-30-0-30-0'>\r\n                    <Footer />\r\n                </footer>\r\n                <Modal\r\n                    visible={this.state.popState}\r\n                    transparent\r\n                    title='登录提醒'\r\n                    className='user-tips-popup'\r\n                    footer={[{ text: '确定', onPress:  () => { \r\n                        this.setPopState()\r\n                    }}]}\r\n                >\r\n                    <section className='incarnate-success'>\r\n                        <p>\r\n                            该账号尚未登录，请关注跨越速运公众号登录绑定\r\n                        </p>\r\n                    </section>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport { HasNoUser }","import {\r\n    Home,\r\n\r\n    User,\r\n    HasNoUser,\r\n\r\n    Login,\r\n    Register\r\n\r\n} from '../view'\r\n// import asyncComponent from '../decorator/AsyncComponent '\r\n\r\n// const AsyncHome = asyncComponent(() => import(Home))\r\n// const AsyncUser = asyncComponent(() => import(User))\r\n// const AsyncHasNoUser = asyncComponent(() => import(HasNoUser))\r\n// const AsyncIntroduce = asyncComponent(() => import(Introduce))\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/home',\r\n        component: Home,\r\n        routes: [\r\n            // 用户信息\r\n            {\r\n                path: '/home/user',\r\n                component: User,\r\n                login: true\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        path: '/has-no-login',     //登录控制器\r\n        component: HasNoUser\r\n    },\r\n    {\r\n        path: '/Register',\r\n        component: Register\r\n    },\r\n    {\r\n        path: '/login',     //用户登录\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/',     //用户登录\r\n        component: Login,\r\n    },\r\n]\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch, HashRouter as Router } from \"react-router-dom\"\r\nimport { routes } from './routes'\r\n\r\nimport { getToken, getLocalStroge, TOKEN_EXP } from '../utils';\r\nimport moment from 'moment'\r\n/**\r\n * 路由+重定向\r\n */\r\nexport const RouteWithSubRoutes = ({ routes, redirect }) => (\r\n    <Switch>\r\n        {routes.map((route, i) => (\r\n\r\n            <Route\r\n                path={route.path}\r\n                exact={route.exact}\r\n                key={i}\r\n                render={props => {\r\n                    console.log(route.login, getToken(), moment().isBefore(moment(new Date(getLocalStroge(TOKEN_EXP))).add('hours', 2)))\r\n                    if (route.login) {\r\n                        if (getToken() && moment().isBefore(moment(new Date(getLocalStroge(TOKEN_EXP))).add('hours', 2))) {\r\n                            return <route.component {...props} routes={route.routes} />\r\n                        } else {\r\n                            return <Redirect to={{\r\n                                pathname: '/login',\r\n                            }} />\r\n                        }\r\n                    } else {\r\n                        return <route.component {...props} routes={route.routes} />\r\n                    }\r\n                }}\r\n            />\r\n        ))}\r\n        {redirect ? <Redirect to={redirect} /> : ''}\r\n    </Switch>\r\n)\r\n\r\nexport const BrowserRouter = () => (\r\n    <Router>\r\n        <RouteWithSubRoutes routes={routes} />\r\n    </Router>\r\n)\r\n","import React, { Component } from 'react';\nimport { LocaleProvider } from 'antd-mobile';\nimport enUS from 'antd-mobile/lib/locale-provider/en_US';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { Provider } from 'react-redux';\nimport configureStore from \"../../store/persistor\";\nimport { BrowserRouter } from '../../routers';\nimport { Loading } from '../../components';\nconst { store, persistor, history } = configureStore\n\n// const epicMiddleware = createEpicMiddleware(rootEpic);\n// const store = createStore(rootReducer, DevTools.instrument())\nconsole.log(history)\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Loading ref={ref => { Loading.instance = ref }} />\n                <LocaleProvider locale={enUS}>\n                    <Provider store={store}>\n                        <PersistGate persistor={persistor}>\n                            <ConnectedRouter history={history} store={store}>\n                                <BrowserRouter />\n                            </ConnectedRouter>\n                        </PersistGate>\n                    </Provider>\n                </LocaleProvider>\n            </div>\n        );\n    }\n}\nexport { App }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './view/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// registerServiceWorker();\n"],"sourceRoot":""}